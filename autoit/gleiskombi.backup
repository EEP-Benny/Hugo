Global Const $CombiDisplay = 3
Global $CombiTab

;;  GUI CombiTab
Global $csposbutton
Global $csinverse1cb
Global $csnull1cb


$keydefstring &= "!k:setcombi|"


Func Pfeil2(ByRef $graf, $xs, $ys, $ll, $fi, $color)
    Local $co = CosD($fi)
    Local $si = SinD($fi)

    Local $l1 = $ll * 0.15
    Local $l2 = $ll * 0.8

    GUICtrlSetGraphic($graf, $GUI_GR_COLOR, $color)

    ;;	GUICtrlSetGraphic($graf,$GUI_GR_MOVE,$xs,$ys)
    GUICtrlSetGraphic($graf, $GUI_GR_MOVE, $xs + $l2 * $co, $ys - $l2 * $si)
    GUICtrlSetGraphic($graf, $GUI_GR_LINE, $xs + $ll * $co, $ys - $ll * $si)
    GUICtrlSetGraphic($graf, $GUI_GR_LINE, $xs + $l2 * $co - $l1 * $si, $ys - $l2 * $si - $l1 * $co)
    GUICtrlSetGraphic($graf, $GUI_GR_LINE, $xs + $ll * $co, $ys - $ll * $si)
    GUICtrlSetGraphic($graf, $GUI_GR_LINE, $xs + $l2 * $co + $l1 * $si, $ys - $l2 * $si + $l1 * $co)

EndFunc   ;==>Pfeil2

Func DrawXKW(ByRef $graf, $xs, $ys, $fi, $dirselect)
    Local $pts[60] = [-1, -1, -0.5, -0.5, -1, 0, -0.5, 0, -1, 1, -0.5, 0.5, _
            1, -1, 0.5, -0.5, 1, 0, 0.5, 0, 1, 1, 0.5, 0.5, _
             - 0.5, -0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 0.5, _
             - 0.5, -0.5, 0.5, 0, -0.5, 0.5, 0.5, 0, _
             - 0.5, 0, 0.5, -0.5, -0.5, 0, 0.5, 0.5, _
             - 0.5, -0.5, 0.5, 0.5, -0.5, 0, 0.5, 0, -0.5, 0.5, 0.5, -0.5]
    Local $trackselect[$TrackDataLen]
    If $dirselect == 0 Then
        $dirselect = $csdirselect
        GUICtrlSetGraphic($graf, $GUI_GR_COLOR, 0x008800)
    Else
        GUICtrlSetGraphic($graf, $GUI_GR_COLOR, 0x000088)
    EndIf

    DirToTrack($dirselect, $trackselect)
    ;_ArrayDisplay($trackselect)
    Local $xa
    Local $ya
    Local $tracknr = 0
    For $i = 0 To 56 Step 4
        If $trackselect[$tracknr] > 0 Then
            Local $xa = $pts[$i] * 0.075 * $xsize;
            Local $ya = $pts[$i + 1] * 0.075 * $xsize;
            Local $xe = $pts[$i + 2] * 0.075 * $xsize;
            Local $ye = $pts[$i + 3] * 0.075 * $xsize;
            Rotate(-$fi, $xa, $ya)
            Shift($xs, $ys, $xa, $ya)
            Rotate(-$fi, $xe, $ye)
            Shift($xs, $ys, $xe, $ye)
            GUICtrlSetGraphic($graf, $GUI_GR_MOVE, $xa, $ya)
            GUICtrlSetGraphic($graf, $GUI_GR_LINE, $xe, $ye)
        EndIf
        $tracknr += 1
    Next
EndFunc   ;==>DrawXKW

Func DrawCombi(ByRef $graf)
    NGResetGraph($graf)

    Local $fi = $csdir;

    Local $xm = $xsize * 0.5
    Local $ym = $ysize * 0.5

    Local $ll = $xsize * 0.4

    Local $dx = 0.15 * $xsize * CosD($fi)
    Local $dy = 0.15 * $xsize * SinD($fi)

    GUICtrlSetGraphic($graf, $GUI_GR_COLOR, 0)

    For $j = 0 To 4
        Local $jr = $j - 2
        For $i = 0 To 4
            Local $ir = $i - 2
            If ($csOld[$i][$j] > 0) Or ($j == 2 And $i == 2) Then
                ;; Rect($graf,$xm+$ir*$dx-$jr*$dy,$ym-$jr*$dx-$ir*$dy,$fi)
                DrawXKW($graf, $xm + $ir * $dx - $jr * $dy, $ym - $jr * $dx - $ir * $dy, $fi, $csOld[$i][$j])
            EndIf
        Next
    Next

    Pfeil2($graf, $xm, $ym, $ll, $fi + 90, 0xff0000);
    Pfeil2($graf, $xm, $ym, $ll, $fi, 0xffff00);
    Pfeil2($graf, $xm, $ym, $ll, $fi - 90, 0x00ff00);
    Pfeil2($graf, $xm, $ym, $ll, $fi - 180, 0x0000ff);

    GUICtrlSetGraphic($graf, $GUI_GR_REFRESH);

EndFunc   ;==>DrawCombi

--SetDisplay
        Case $CombiTab
            $DisplayStat = $CombiDisplay

    ;; Gleis-Kombinationen
    

    Func combidatadisplay($where)
    Local $handle[3]
    $handle[0] = NGLabel(MsgH("Tracktab", "x") & ": ", $where);
    $handle[1] = NGLabel(MsgH("Tracktab", "y") & ": ", $where);
    $handle[2] = NGLabel(MsgH("Tracktab", "angle") & ": ", $where);
    Return $handle
    EndFunc   ;==>combidatadisplay
    
    Func showcombidata($handle)
    GUICtrlSetData($handle[0], MsgH("Tracktab", "x") & ": " & $csx);
    GUICtrlSetData($handle[1], MsgH("Tracktab", "y") & ": " & $csy);
    GUICtrlSetData($handle[2], MsgH("Tracktab", "angle") & ": " & Round($csdir, 1) & "°");
    EndFunc   ;==>showcombidata
    
    Func XKWTrack(ByRef $gleis, $len, $width, $nr)
    Local $tanphi = $width / $len
    Local $phi = ATan($tanphi)
    Local $tanphi2 = Tan($phi / 2)
    Local $sinphi = Sin($phi)
    Local $cosphi = Cos($phi)
    Local $len2 = $len * 0.5
    Local $width2 = $width * 0.5
    Local $rad = $len2 * 0.83
    Local $diag = $len2 / Cos($phi)
    Local $phi_degree = $phi * 180 / 3.14159265
    
    $gleis[$ih1] = 0
    $gleis[$igrad] = 0
    
    Switch $nr
    Case 0
    $gleis[$ix] = 0
    $gleis[$iy] = $width2
    $gleis[$idir] = -$phi_degree
    $gleis[$iangle] = 0
    $gleis[$ilen] = $diag - $rad
    Case 1
    $gleis[$ix] = 0
    $gleis[$iy] = 0
    $gleis[$idir] = 0
    $gleis[$iangle] = 0
    $gleis[$ilen] = $len2 - $rad
    Case 2
    $gleis[$ix] = 0
    $gleis[$iy] = -$width2
    $gleis[$idir] = $phi_degree
    $gleis[$iangle] = 0
    $gleis[$ilen] = $diag - $rad
    Case 3
    $gleis[$ix] = $len
    $gleis[$iy] = $width2
    $gleis[$idir] = $phi_degree + 180
    $gleis[$iangle] = 0
    $gleis[$ilen] = $diag - $rad
    Case 4
    $gleis[$ix] = $len
    $gleis[$iy] = 0
    $gleis[$idir] = 180
    $gleis[$iangle] = 0
    $gleis[$ilen] = $len2 - $rad
    Case 5
    $gleis[$ix] = $len
    $gleis[$iy] = -$width2
    $gleis[$idir] = -$phi_degree + 180
    $gleis[$iangle] = 0
    $gleis[$ilen] = $diag - $rad
    
    Case 6;; 0 <-> 3
    $gleis[$ix] = $len2 - $rad * $cosphi
    $gleis[$iy] = $rad * $sinphi
    $gleis[$idir] = -$phi_degree
    $gleis[$iangle] = 2 * $phi_degree
    $gleis[$ilen] = 2 * $phi * $rad / $tanphi
    Case 7;; 2 <-> 5
    $gleis[$ix] = $len2 - $rad * $cosphi
    $gleis[$iy] = -$rad * $sinphi
    $gleis[$idir] = $phi_degree
    $gleis[$iangle] = -2 * $phi_degree
    $gleis[$ilen] = 2 * $phi * $rad / $tanphi
    
    Case 8;; 0 <-> 4
    $gleis[$ix] = $len2 - $rad * $cosphi
    $gleis[$iy] = $rad * $sinphi
    $gleis[$idir] = -$phi_degree
    $gleis[$iangle] = $phi_degree
    $gleis[$ilen] = $phi * $rad / $tanphi2
    Case 9;; 2 <-> 4
    $gleis[$ix] = $len2 - $rad * $cosphi
    $gleis[$iy] = -$rad * $sinphi
    $gleis[$idir] = $phi_degree
    $gleis[$iangle] = -$phi_degree
    $gleis[$ilen] = $phi * $rad / $tanphi2
    Case 10;; 1 <-> 3
    $gleis[$ix] = $len2 - $rad
    $gleis[$iy] = 0
    $gleis[$idir] = 0
    $gleis[$iangle] = $phi_degree
    $gleis[$ilen] = $phi * $rad / $tanphi2
    Case 11;; 1 <-> 5
    $gleis[$ix] = $len2 - $rad
    $gleis[$iy] = 0
    $gleis[$idir] = 0
    $gleis[$iangle] = -$phi_degree
    $gleis[$ilen] = $phi * $rad / $tanphi2
    
    Case 12;; 0 <-> 5
    $gleis[$ix] = $len2 - $rad * $cosphi
    $gleis[$iy] = $rad * $sinphi
    $gleis[$idir] = -$phi_degree
    $gleis[$iangle] = 0
    $gleis[$ilen] = 2 * $rad
    Case 13;; 1 <-> 4
    $gleis[$ix] = $len2 - $rad
    $gleis[$iy] = 0
    $gleis[$idir] = 0
    $gleis[$iangle] = 0
    $gleis[$ilen] = 2 * $rad
    Case 14;; 2 <-> 3
    $gleis[$ix] = $len2 - $rad * $cosphi
    $gleis[$iy] = -$rad * $sinphi
    $gleis[$idir] = $phi_degree
    $gleis[$iangle] = 0
    $gleis[$ilen] = 2 * $rad
    
    EndSwitch
    ErgaenzeGleis($gleis)
    EndFunc   ;==>XKWTrack
    
    Func SelectTrack($dirselect, $from, $to, $connect, ByRef $trackselect)
    If BitTest($dirselect, $BitMask[$from]) > 0 And BitTest($dirselect, $BitMask[$to]) > 0 Then
    $trackselect[$from] += 1
    $trackselect[$to] += 1
    $trackselect[$connect] = 1
    EndIf
    EndFunc   ;==>SelectTrack
    
    Func DirToTrack($dirselect, ByRef $trackselect)
    For $i = 0 To 14
    $trackselect[$i] = 0
    Next
    
    SelectTrack($dirselect, 0, 3, 6, $trackselect)
    SelectTrack($dirselect, 2, 5, 7, $trackselect)
    SelectTrack($dirselect, 0, 4, 8, $trackselect)
    SelectTrack($dirselect, 2, 4, 9, $trackselect)
    SelectTrack($dirselect, 1, 3, 10, $trackselect)
    SelectTrack($dirselect, 1, 5, 11, $trackselect)
    SelectTrack($dirselect, 0, 5, 12, $trackselect)
    SelectTrack($dirselect, 1, 4, 13, $trackselect)
    SelectTrack($dirselect, 2, 3, 14, $trackselect)
    EndFunc   ;==>DirToTrack

#cs
    $CombiTab = NGCreateTabItem(MsgH("GUI", "TabCombi"));
    ;;#include "g_combi.au3"
    
    ;; tab für gleiskombinationen
    ;; new Buttons... for position, but track handlers are used
    Global $csposbutton = NGButton(MsgH("Combitab", "getpos"), $NG_LEFT)
    Global $csinverse1cb = NGCheckBox(MsgH("Tracktab", "inverse"), $NG_RIGHT, False);
    Global $csnull1cb = NGCheckBox(MsgH("Tracktab", "Stub"), $NG_RIGHT, False);
    
    ;;Global $csposbutton = NGButton($mtext_cs_getpos,$NG_LEFT)
    
    Global $combidata = combidatadisplay($NG_BOTH)
    
    NGDel($NG_BOTH, $SS_BLACKFRAME, 10)
    
    Global $csDir0 = NGCheckBox(MsgH("CombiTab", "Dir0"), $NG_LEFT, True)
    Global $csDir1 = NGCheckBox(MsgH("CombiTab", "Dir1"), $NG_LEFT, True)
    Global $csDir2 = NGCheckBox(MsgH("CombiTab", "Dir2"), $NG_LEFT, True)
    Global $csDir3 = NGCheckBox(MsgH("CombiTab", "Dir3"), $NG_RIGHT, True)
    Global $csDir4 = NGCheckBox(MsgH("CombiTab", "Dir4"), $NG_RIGHT, True)
    Global $csDir5 = NGCheckBox(MsgH("CombiTab", "Dir5"), $NG_RIGHT, True)
    
    NGSpace(10, $NG_BOTH)
    
    Global $csupbutton = NGButton(MsgH("CombiTab", "Up"), $NG_BOTH, 0);
    Global $csrightbutton = NGButton(MsgH("CombiTab", "Right"), $NG_RIGHT, 1);
    Global $csleftbutton = NGButton(MsgH("CombiTab", "Left"), $NG_LEFT, 3);
    Global $csdownbutton = NGButton(MsgH("CombiTab", "Down"), $NG_BOTH, 2);
    
    NGSpace(10, $NG_BOTH)
    
    Global $csLenInput = NGInput(MsgH("CombiTab", "Length"), $cslen, $NG_BOTH);
    Global $csWidthInput = NGInput(MsgH("CombiTab", "Width"), $cswidth, $NG_BOTH);
    
    ;;MsgBox(0,"iii",$csleninput & " " & $cswidthinput)
    
    ;;NGDel($NG_BOTH,$SS_BLACKFRAME,20)
    
    Global $cssetbutton = NGButton(MsgH("CombiTab", "Set"), $NG_LEFT);
#ce
#cs
    ;; variante mit Gleiskombination
    ;; Listen zur Zuordnung action(string) <-> msg
    Local $actionmsglist[48] = [$clockbutton, _
    $davorbutton, $danachbutton, $PutTrackButton, _
    $egalbutton, $replacebutton, _
    $getposbutton, $setposbutton, _
    $cssetbutton, _
    $inverse1cb, $null1cb, _
    $clock_start_stop_rad, $clock_start_cont_rad, $clock_lap_rad, _
    $clock_reset_button, _
    $signbutton1, $signbutton2, $signbutton3, $signbutton4, _
    $TrackTab, $Track2Tab, $ImmoTab, $SignalTab, $OptionTab, $CombiTab, _
    $tt_set_arrival, $tt_set_departure, _
    $activate_hugo, $activate_eep, _
    $quitbutton]
    
    Global $actionlist[48] = ["clock", _
    "before", "after", "puttrack", _
    "setheight", "replacetrack", _
    "getobject", "setobject", "setcombi", _
    "inverse", "null", _
    "clockstartstop", "clockstartcont", "clocklap", _
    "clockreset", _
    "signal1", "signal2", "signal3", "signal4", _
    "tabtrack", "tabtrack2", "tabobject", "tabsignal", "taboptions", "tabcombi", _
    "setarrival", "setdeparture", _
    "activatehugo", "activateeep", _
    "quit"]
#ce
-- If $DisplayNeedsRedraw Then
  
           Case $CombiDisplay
                    DrawCombi($previewa)


                        #cs
                            ;; set combination position from end of $StartGleis
                            $csx = $StartGleis[$ixe]
                            $csy = $StartGleis[$iye]
                            $csdir = $StartGleis[$idir] + $StartGleis[$iangle]
                            $csh1 = $StartGleis[$ieh2]
                            Local $csgrad = $StartGleis[$igrad]
                            $csdhx = CosD($csdir) * ($csgrad)
                            $csdhy = SinD($csdir) * ($csgrad)
                            ;;MsgBox(0,"Anstieg","dhx: " & $csdhx & " dhy: " & $csdhy)
                            
                            For $i = 0 To 4
                            For $j = 0 To 4
                            $csOld[$j][$i] = 0
                            Next
                            Next
                            showcombidata($combidata)
                        #ce
                ;;			#include "h_combi.au3"
                #cs
                    Case $csDir0
                    If GUICtrlRead($csDir0) == $GUI_CHECKED Then
                    BitSet($csdirselect, 1)
                    Else
                    BitReset($csdirselect, 1)
                    EndIf
                    $DisplayNeedsRedraw = 1
                    
                    Case $csDir1
                    If GUICtrlRead($csDir1) == $GUI_CHECKED Then
                    BitSet($csdirselect, 2)
                    Else
                    BitReset($csdirselect, 2)
                    EndIf
                    $DisplayNeedsRedraw = 1
                    
                    Case $csDir2
                    If GUICtrlRead($csDir2) == $GUI_CHECKED Then
                    BitSet($csdirselect, 4)
                    Else
                    BitReset($csdirselect, 4)
                    EndIf
                    $DisplayNeedsRedraw = 1
                    
                    Case $csDir3
                    If GUICtrlRead($csDir3) == $GUI_CHECKED Then
                    BitSet($csdirselect, 8)
                    Else
                    BitReset($csdirselect, 8)
                    EndIf
                    $DisplayNeedsRedraw = 1
                    
                    Case $csDir4
                    If GUICtrlRead($csDir4) == $GUI_CHECKED Then
                    BitSet($csdirselect, 16)
                    Else
                    BitReset($csdirselect, 16)
                    EndIf
                    $DisplayNeedsRedraw = 1
                    
                    Case $csDir5
                    If GUICtrlRead($csDir5) == $GUI_CHECKED Then
                    BitSet($csdirselect, 32)
                    Else
                    BitReset($csdirselect, 32)
                    EndIf
                    $DisplayNeedsRedraw = 1
                    
                    Case $csupbutton
                    InputNumber($csWidthInput, $cswidth)
                    $csx += -SinD($csdir) * $cswidth
                    $csy += CosD($csdir) * $cswidth
                    For $i = 0 To 4
                    For $j = 0 To 3
                    $csOld[$i][$j] = $csOld[$i][$j + 1]
                    Next
                    $csOld[$i][$j] = 0
                    Next
                    $DisplayNeedsRedraw = 1
                    
                    ;;Global $csrightbutton= NGButton(">",$NG_RIGHT);
                    Case $csrightbutton
                    InputNumber($csLenInput, $cslen)
                    $csx += CosD($csdir) * $cslen
                    $csy += SinD($csdir) * $cslen
                    For $i = 0 To 4
                    For $j = 0 To 3
                    $csOld[$j][$i] = $csOld[$j + 1][$i]
                    Next
                    $csOld[4][$i] = 0
                    Next
                    $DisplayNeedsRedraw = 1
                    
                    ;;Global $csleftbutton= NGButton("<",$NG_LEFT);
                    Case $csleftbutton
                    InputNumber($csLenInput, $cslen)
                    $csx += -CosD($csdir) * $cslen
                    $csy += -SinD($csdir) * $cslen
                    For $i = 0 To 4
                    For $j = 4 To 1 Step -1
                    $csOld[$j][$i] = $csOld[$j - 1][$i]
                    Next
                    $csOld[0][$i] = 0
                    Next
                    $DisplayNeedsRedraw = 1
                    
                    ;;Global $csdownbutton=NGButton("V",$NG_BOTH);
                    Case $csdownbutton
                    InputNumber($csWidthInput, $cswidth)
                    $csx += SinD($csdir) * $cswidth
                    $csy += -CosD($csdir) * $cswidth
                    For $i = 0 To 4
                    For $j = 4 To 1 Step -1
                    $csOld[$i][$j] = $csOld[$i][$j - 1]
                    Next
                    $csOld[$i][0] = 0
                    Next
                    $DisplayNeedsRedraw = 1
                    
                    Case $csLenInput
                    InputNumber($csLenInput, $cslen)
                    ;;MsgBox(0,"Set cslen",$cslen)
                    
                    Case $csWidthInput
                    InputNumber($csWidthInput, $cswidth)
                    ;;GuiCtrlSetData($csWidthInput,$cswidth)
                    
                    Case $cssetbutton
                    SetTab($CombiTab)
                    WinActivate($eep)
                    
                    InputNumber($csLenInput, $cslen)
                    InputNumber($csWidthInput, $cswidth)
                    
                    DirToTrack($csdirselect, $cstrackselect)
                    
                    ;;_arraydisplay($csdirselect)
                    ;;_arraydisplay($cstrackselect)
                    
                    Dim $xkwtrack[$TrackDataLen]
                    ;; referenzpunkt der Gleiskombination ermitteln
                    Global $csreftrack = 1
                    XKWTrack($xkwtrack, $cslen, $cswidth, $csreftrack)
                    Local $csrefx = $xkwtrack[$ix]
                    Local $csrefy = $xkwtrack[$iy]
                    Local $csrefdir = $xkwtrack[$idir]
                    
                    For $i = 0 To 14
                    XKWTrack($xkwtrack, $cslen, $cswidth, $i)
                    ShiftTrack($xkwtrack, -$csrefx, -$csrefy)
                    RotateTrack($xkwtrack, 0, 0, -$csrefdir)
                    
                    RotateTrack($xkwtrack, 0, 0, $csdir)
                    ShiftTrack($xkwtrack, $csx, $csy)
                    $xkwtrack[$ih1] = $csh1
                    If $cstrackselect[$i] > 0 Then
                    PutTrack($xkwtrack, $cstrackselect[$i])
                    EndIf
                    Next
                    $csOld[2][2] = $csdirselect
                    ;;_ArrayDisplay($csOld)
                #ce

-- Tabwechsel
            Case $CombiTab
                SetTab($CombiTab)
